Alex Grabanski - ajg137@case.edu

Progress for the week ending in 9/30/16:
-Finalized the Circuit API (now as a long comment in ChipInvoker.java)
-Wrote an initial version of the reflective calling code for circuits
(also ChipInvoker.java)

Progress for the week ending in 10/7/16:
-Finalized reflective calling code for circuits (ChipInvoker.java)
-Finalized reflective calling code for circuit testers (TestGeneratorInvoker.java)
-Put both under a common abstract superclass (Invoker)
-Added tests for both classes
-Fixed functionality so all tests pass

Progress for the week ending in 10/14/16:
-Helped Sean try to track down the cause of the control block's
missing texture in the inventory
-Helped with logistics (build, repository consistency, etc.)
of moving things over into circuitsMod
-Created an initial version of a bus block

Progress for the week ending in 10/28/16:
-Finished up initial bus network code, began work on Circuit Tile Entity code.
This is something that requires some level of bootstrapping for real testing,
so putting it on a separate branch for now.

Note:
-The order of things as in the Gantt chart will likely change -- I will
spend this next week working on developing the protocol for bus networks,
and then will begin work on the Circuit Tile Entity. This is desirable
because the operation of the tile entity will likely be closely
tied to the operation of buses.

Progress for the week ending in 11/4/16:
-Performed work to integrate Circuit Tile Entity logic with the
Bus Network logic. Works in theory, but still's gotta be tested.

Progress for the week ending in 11/11/16:
-Helped track down issues with AnvilChunkLoader
 [used to load the puzzle dimension]
-Defined/implemented loading of circuit implementations and metadata
from folders

Progress for the week ending in 11/18/16:
-Fixed some bugs with client/server communication and initialization
of circuit tile entities
-Collaborated with Sean to come up with a road map for puzzle dimension levels

Progress for the week ending in 11/25/16:
-Fixed a number of bugs related to circuit bus behavior
-Fixed a number of bugs related to circuit tile entity rendering
-Fixed a number of bugs related to circuit item rendering
-Made it so the server communicates bus/wire mapping to the client, used
to add more visual cues about connectivity to the user
-Merged Circuit Tile Entity branch into master

Progress for the week ending in 12/2/16:
-Implemented configurable circuit implementations
(cuts down on the number of implementation files)
-Finalized implementations, images for all circuits
-Helped Sean fix bugs with the puzzle dimension tester tile entity
-Began assimilating overworld code from the proof-of-concept
(under the branch merge_proof_of_concept_overworld_code) 

Up next:
High priority:
-Finish assimilating proof-of-concept overworld code
    -Update overworld code to respect config options for unlocks
    -Update overworld control TE code to allow testing bused circuits
    -Add dummy I/O blocks for multi-bit testers
    -Update overworld control GUI code to allow configuring circuits
    -Merge overworld code back into master
-Work with Sean to develop Puzzle Dimension content

Low priority:
-Update old GUI code to use Minecraft's standard widgets
-Write better descriptions for all circuits
-Comprehensive code cleanup
-Fix circuit-reversal on load bug
-Persist sequential circuit state between sessions
-Fix permissions issue with saving circuit uidMap to file for
 the first time on Windows
-Programmatically generate unicode formatting strings (instead of hard-coding)
-Visual updates (fancier+skinnier buses, circuit block face textures
instead of solid colors)
