Nand(n):

Computes the bitwise NAND of its two n-bit inputs, meaning that a bit at a given position in the output bus will be low only if the same bit is high in both of its inputs. This is equivalent to the result of passing the output of an And(n) circuit to an Inverter(n) circuit, but faster by one redstone tick.

Example [Nand(1)]:

Truth table:

A B  Output
0 0  1
0 1  1
1 0  1
1 1  0

Note:
NAND is universal as a Boolean logic gate, meaning that any other logic gate (AND/OR/NOT/NOR/IMPLIES/etc.) may be built using only NAND gates.

